/**
 * Use the standardised spacing options for padding.
 */

@mixin padding-spacing($level, $side: false, $isImportant: false) {
	$spacingSmall: spacing($level);
	$spacingLarge: spacing($level, large);
	$selector: 'padding';
	$important: '';
	@if $side and $side != '' { $selector: '#{$selector}-#{$side}'; }
	@if $isImportant { $important: ' !important'; }
	@debug $important; 
	#{$selector}: #{$spacingSmall}#{$important};
	@if $spacingSmall != $spacingLarge {
		@include mq(tos) { 
			#{$selector}: #{$spacingLarge}#{$important};
		}
	}
}

/**
 * Use the standardised spacing options for margin.
 */

@mixin margin-spacing($level, $side: false, $isImportant: false) {
	$spacingSmall: spacing($level);
	$spacingLarge: spacing($level, large);
	$selector: 'margin';
	$important: '';
	@if $side and $side != '' { $selector: '#{$selector}-#{$side}'; }
	@if $isImportant { $important: ' !important'; }
	@debug $important; 
	#{$selector}: #{$spacingSmall}#{$important};
	@if $spacingSmall != $spacingLarge {
		@include mq(tos) { 
			#{$selector}: #{$spacingLarge}#{$important};
		}
	}
}

/**
 * Non-overflow-based clearfix (for elements that need things to be able to go outside them)
 */

@mixin clearfix {
	&:before,
	&:after {
		display: table;
		content: " ";
	}
	&:after {
		clear: both;
	}
}

/**
 * Accessible content hiding
 */

@mixin hidden {
	position: absolute;
	width: 1px;
	height: 1px;
	margin: -1px;
	padding: 0;
	border: 0;
	overflow: hidden;
	clip: rect(0 0 0 0);
}

/**
 * Accessible content showing
 */

@mixin visible {
	position: static;
	width: auto;
	height: auto;
	margin: 0;
	overflow: visible;
	clip: auto;
}

/**
 * Device safe area mixin
 * Cause this is gloriously inconsistent right now.
 * Also Sass doesn't support min/max CSS functions properly yet so stuff needs to be escaped weirdly.
 */

@mixin safe-inset($property, $side, $min: 0px) {
    #{$property}: $min;
    @supports (padding: m#{a}x(0px)) {
        #{$property}: m#{a}x(#{$min}, env(safe-area-inset-#{$side}));
    }
}